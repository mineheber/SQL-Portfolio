-- The query calculates the sum of odd-numbered and even-numbered measurements separately for a particular day and 
-- displays the results in columns: 
--   measurement_day || odd_sum || even_sum

-- Using multiple WITH statements with 3 different CTEs:

WITH 

-- Within every day the measurements will be ordered with ROW_NUMBER window function.
numbered_days AS (
    SELECT 
    measurement_value ,
    CAST(measurement_time AS DATE) AS measurement_day,
    ROW_NUMBER() OVER(PARTITION BY CAST(measurement_time AS DATE) ORDER BY measurement_time ASC) AS day_number
    FROM measurements ) ,

-- Odd numbered row-numbers will be summed over the corresponding measurement_value for the specific day
odd_numbered AS (
    SELECT 
    measurement_day,
    SUM(measurement_value) AS odd_sum
    FROM numbered_days
    WHERE day_number % 2 = 1
    GROUP BY measurement_day ) ,

-- Even numbered row-numbers will be summed over the corresponding measurement_value for the specific day
even_numbered AS (
    SELECT 
    measurement_day,
    SUM(measurement_value) AS even_sum
    FROM numbered_days
    WHERE day_number % 2 = 0
    GROUP BY measurement_day) 
    
-- All three CTEs are joined on measurement_day to get the odd and even sums. 
SELECT
  nd.measurement_day,
  oddn.odd_sum ,
  evenn.even_sum
FROM numbered_days AS nd JOIN odd_numbered AS oddn ON 
    nd.measurement_day = oddn.measurement_day
      JOIN even_numbered AS evenn ON
      nd.measurement_day = evenn.measurement_day
GROUP BY nd.measurement_day ,oddn.odd_sum ,evenn.even_sum
;


